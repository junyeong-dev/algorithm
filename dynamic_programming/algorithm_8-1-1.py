# 동적 계획법/다이나믹 프로그래밍(Dynamic Programming)
# 최적의 해를 구하기에 시간이 매우 많이 필요하거나 메모리 공가니 매우 많이 필요한
# 문제 등이 컴퓨터로도 해결하기 어려운 경우가 있다.
# 컴퓨터는 연산 속도에 한계가 있고, 메모리 공간을 사용할 수 있는 데이터의 개수도
# 한정적이라는 점이 많은 제약을 발생시킨다.
# 메모리 공간을 약간 더 사용하면 연산 속도르르 비약적으로 증가시킬 수 있는 방법 중
# 하나가 동적 계획법/다이나믹 프로그래밍(Dynamic Programming)이다.


# 피보나치 함수(Fibonacci Function)를 재귀 함수로 구현
def fibo(x):
    if x == 1 or x == 2:
        return 1
    return fibo(x - 1) + fibo(x - 2)

print(fibo(10))