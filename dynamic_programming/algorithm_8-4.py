# 가로의 길이가 n, 세로의 길이가 2인 직사각형 형태의 얇은 바닥이 있다.
# 이 얇은 바닥을 1 x 2의 덮개, 2 x 1의 덮개, 2 x 2의 덮개를 이용해 채우고자 한다.
# 이때 바닥을 채우는 모든 경우의 수를 구하는 프로그램을 작성하시오.
# 입력 예시
# 3
# 출력 예시 (바닥을 채우는 방법의 수를 796,796으로 나눈 나머지를 출력)
# 5

# 다이나믹 프로그래밍 문제에서 종종 결과를 어떤 수로 나눈 결과를
# 출력하라는 내용이 들어가는 경우가 있는데, 이는 단지 결과값이 굉장히
# 커질 수 있기 때문에 그런 것이다.

# 왼쪽부터 i - 1까지 길이가 덮개로 이미 채워져 있으면 2 x 1의 덮개를 채우는
# 하나의 경우밖에 존재하지 않는다.
# 왼쪽부터 i - 2까지 길이가 덮개로 이미 채워져 있으면 1 x 2덮개 2개를 넣는 경우,
# 혹은 2 x 2의 덮개 하나를 넣는 경우로 2가지 경우가 존재한다.

n = int(input())

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 1001

# 다이나믹 프로그래밍(Dynamic Programing) 진행(보텀업)
d[1] = 1
d[2] = 3
for i in range(3, n + 1):
    d[i] = (d[i - 1] + 2 * d[i - 2]) % 796796

# 계산된 결과 출력
print(d[n])