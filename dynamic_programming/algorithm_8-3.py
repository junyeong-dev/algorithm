# 개미 전사는 부족한 식량을 충당하고자 메뚜기 마을의 식량창고를 몰래 공격하려고 한다.
# 식량창고는 일직선으로 이어져 있다. 각 식량창고에는 정해진 수의 식량을 저장하고 있다.
# 개미 전사는 식량창고를 선택적으로 약탈하여 식량을 빼앗을 예정이다.
# 메뚜기 정찰병들은 일직선상에 존재하는 식량창고 중에서 서로 인적합 식량창고가 공격받으면
# 바로 알아챌 수 있다. 따라서 정찰병에게 들키지 않고 식량창고를 약찰하기 위해서는
# 최소한 한 칸이상 떨어진 식량창고를 약탈해야 한다.
# 개미 전사를 위해 식량창고 n개에 대한 정보가 주어졌을 때 얻을 수 있는 식량의 최댓값을
# 구하는 프로그램을 작성하시오.
# 입력 예시
# 4
# 1 3 1 5
# 출력 예시
# 8

# 왼쪽부터 차례대로 식량창고를 털지 안 털지를 결정하는 경우와 특정한 i번째
# 식량창고에 대해서 털지 안 털지의 여부를 결정할 때,
# 단 2가지 경우에 대해서만 확인하면 된다.

n = int(input())
warehouse = list(map(int, input().split()))

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 100

# 다이나믹 프로그래밍(Dynamic Programing) 진행(보텀업)
d[0] = warehouse[0]
d[1] = max(warehouse[0], warehouse[1])
for i in range(2, n):
    d[i] = max(d[i - 1], d[i - 2] + warehouse[i])

# 계산된 결과 출력
print(d[n - 1])